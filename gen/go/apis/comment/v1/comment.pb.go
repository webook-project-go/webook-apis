// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: apis/comment/v1/comment.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int64                  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid           int64                  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Rid           int64                  `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	Biz           string                 `protobuf:"bytes,5,opt,name=biz,proto3" json:"biz,omitempty"`
	BizId         int64                  `protobuf:"varint,6,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Content       string                 `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Ctime         int64                  `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Comment) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Comment) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *Comment) GetBiz() string {
	if x != nil {
		return x.Biz
	}
	return ""
}

func (x *Comment) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

type GetListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Biz           string                 `protobuf:"bytes,1,opt,name=biz,proto3" json:"biz,omitempty"`
	BizId         int64                  `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	MinId         int64                  `protobuf:"varint,3,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *GetListRequest) GetBiz() string {
	if x != nil {
		return x.Biz
	}
	return ""
}

func (x *GetListRequest) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *GetListRequest) GetMinId() int64 {
	if x != nil {
		return x.MinId
	}
	return 0
}

func (x *GetListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *GetListResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetRepliesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int64                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	MinId         int64                  `protobuf:"varint,2,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepliesRequest) Reset() {
	*x = GetRepliesRequest{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesRequest) ProtoMessage() {}

func (x *GetRepliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesRequest.ProtoReflect.Descriptor instead.
func (*GetRepliesRequest) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{3}
}

func (x *GetRepliesRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GetRepliesRequest) GetMinId() int64 {
	if x != nil {
		return x.MinId
	}
	return 0
}

func (x *GetRepliesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRepliesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepliesResponse) Reset() {
	*x = GetRepliesResponse{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesResponse) ProtoMessage() {}

func (x *GetRepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesResponse.ProtoReflect.Descriptor instead.
func (*GetRepliesResponse) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *GetRepliesResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCommentRequest) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCommentResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReplyCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentRequest) Reset() {
	*x = ReplyCommentRequest{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentRequest) ProtoMessage() {}

func (x *ReplyCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentRequest.ProtoReflect.Descriptor instead.
func (*ReplyCommentRequest) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{7}
}

func (x *ReplyCommentRequest) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type ReplyCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentResponse) Reset() {
	*x = ReplyCommentResponse{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentResponse) ProtoMessage() {}

func (x *ReplyCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentResponse.ProtoReflect.Descriptor instead.
func (*ReplyCommentResponse) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyCommentResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int64                  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCommentRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_apis_comment_v1_comment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apis_comment_v1_comment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_apis_comment_v1_comment_proto_rawDescGZIP(), []int{10}
}

var File_apis_comment_v1_comment_proto protoreflect.FileDescriptor

const file_apis_comment_v1_comment_proto_rawDesc = "" +
	"\n" +
	"\x1dapis/comment/v1/comment.proto\"\xa8\x01\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\x03R\x03uid\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x03R\x03pid\x12\x10\n" +
	"\x03rid\x18\x04 \x01(\x03R\x03rid\x12\x10\n" +
	"\x03biz\x18\x05 \x01(\tR\x03biz\x12\x15\n" +
	"\x06biz_id\x18\x06 \x01(\x03R\x05bizId\x12\x18\n" +
	"\acontent\x18\a \x01(\tR\acontent\x12\x14\n" +
	"\x05ctime\x18\b \x01(\x03R\x05ctime\"f\n" +
	"\x0eGetListRequest\x12\x10\n" +
	"\x03biz\x18\x01 \x01(\tR\x03biz\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\x03R\x05bizId\x12\x15\n" +
	"\x06min_id\x18\x03 \x01(\x03R\x05minId\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"7\n" +
	"\x0fGetListResponse\x12$\n" +
	"\bcomments\x18\x01 \x03(\v2\b.CommentR\bcomments\"R\n" +
	"\x11GetRepliesRequest\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x03R\x03pid\x12\x15\n" +
	"\x06min_id\x18\x02 \x01(\x03R\x05minId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\":\n" +
	"\x12GetRepliesResponse\x12$\n" +
	"\bcomments\x18\x01 \x03(\v2\b.CommentR\bcomments\":\n" +
	"\x14CreateCommentRequest\x12\"\n" +
	"\acomment\x18\x01 \x01(\v2\b.CommentR\acomment\"'\n" +
	"\x15CreateCommentResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"9\n" +
	"\x13ReplyCommentRequest\x12\"\n" +
	"\acomment\x18\x01 \x01(\v2\b.CommentR\acomment\"&\n" +
	"\x14ReplyCommentResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"8\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\x03R\x03uid\"\x17\n" +
	"\x15DeleteCommentResponse2\x9d\x02\n" +
	"\x0eCommentService\x12,\n" +
	"\aGetList\x12\x0f.GetListRequest\x1a\x10.GetListResponse\x125\n" +
	"\n" +
	"GetReplies\x12\x12.GetRepliesRequest\x1a\x13.GetRepliesResponse\x127\n" +
	"\x06Create\x12\x15.CreateCommentRequest\x1a\x16.CreateCommentResponse\x124\n" +
	"\x05Reply\x12\x14.ReplyCommentRequest\x1a\x15.ReplyCommentResponse\x127\n" +
	"\x06Delete\x12\x15.DeleteCommentRequest\x1a\x16.DeleteCommentResponseBAZ?github.com/webook-project-go/webook-apis/gen/go/apis/comment/v1b\x06proto3"

var (
	file_apis_comment_v1_comment_proto_rawDescOnce sync.Once
	file_apis_comment_v1_comment_proto_rawDescData []byte
)

func file_apis_comment_v1_comment_proto_rawDescGZIP() []byte {
	file_apis_comment_v1_comment_proto_rawDescOnce.Do(func() {
		file_apis_comment_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apis_comment_v1_comment_proto_rawDesc), len(file_apis_comment_v1_comment_proto_rawDesc)))
	})
	return file_apis_comment_v1_comment_proto_rawDescData
}

var file_apis_comment_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_apis_comment_v1_comment_proto_goTypes = []any{
	(*Comment)(nil),               // 0: Comment
	(*GetListRequest)(nil),        // 1: GetListRequest
	(*GetListResponse)(nil),       // 2: GetListResponse
	(*GetRepliesRequest)(nil),     // 3: GetRepliesRequest
	(*GetRepliesResponse)(nil),    // 4: GetRepliesResponse
	(*CreateCommentRequest)(nil),  // 5: CreateCommentRequest
	(*CreateCommentResponse)(nil), // 6: CreateCommentResponse
	(*ReplyCommentRequest)(nil),   // 7: ReplyCommentRequest
	(*ReplyCommentResponse)(nil),  // 8: ReplyCommentResponse
	(*DeleteCommentRequest)(nil),  // 9: DeleteCommentRequest
	(*DeleteCommentResponse)(nil), // 10: DeleteCommentResponse
}
var file_apis_comment_v1_comment_proto_depIdxs = []int32{
	0,  // 0: GetListResponse.comments:type_name -> Comment
	0,  // 1: GetRepliesResponse.comments:type_name -> Comment
	0,  // 2: CreateCommentRequest.comment:type_name -> Comment
	0,  // 3: ReplyCommentRequest.comment:type_name -> Comment
	1,  // 4: CommentService.GetList:input_type -> GetListRequest
	3,  // 5: CommentService.GetReplies:input_type -> GetRepliesRequest
	5,  // 6: CommentService.Create:input_type -> CreateCommentRequest
	7,  // 7: CommentService.Reply:input_type -> ReplyCommentRequest
	9,  // 8: CommentService.Delete:input_type -> DeleteCommentRequest
	2,  // 9: CommentService.GetList:output_type -> GetListResponse
	4,  // 10: CommentService.GetReplies:output_type -> GetRepliesResponse
	6,  // 11: CommentService.Create:output_type -> CreateCommentResponse
	8,  // 12: CommentService.Reply:output_type -> ReplyCommentResponse
	10, // 13: CommentService.Delete:output_type -> DeleteCommentResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_apis_comment_v1_comment_proto_init() }
func file_apis_comment_v1_comment_proto_init() {
	if File_apis_comment_v1_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apis_comment_v1_comment_proto_rawDesc), len(file_apis_comment_v1_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_comment_v1_comment_proto_goTypes,
		DependencyIndexes: file_apis_comment_v1_comment_proto_depIdxs,
		MessageInfos:      file_apis_comment_v1_comment_proto_msgTypes,
	}.Build()
	File_apis_comment_v1_comment_proto = out.File
	file_apis_comment_v1_comment_proto_goTypes = nil
	file_apis_comment_v1_comment_proto_depIdxs = nil
}
